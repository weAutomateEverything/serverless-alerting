service: serverless-telegram

frameworkVersion: ">=1.28.0 <2.0.0"

provider:
  name: aws
  runtime: go1.x
  region: eu-west-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ssm:GetParameter"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:Scan"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
      Resource: "*"


package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:
  textAlert:
    handler: bin/alert/text
    memorySize: 128
    events:
      - http:
          path: /alert/text/{groupId}
          method: post
          parameters:
            paths:
              groupId: true

  dynatraceAlert:
    handler: bin/alert/dynatrace
    memorySize: 128
    events:
      - http:
          path: /alert/dynatrace
          method: post

  lambdaAlert:
    handler: bin/alert/lambda
    memorySize: 128
    events:
      - http:
          path: /alert/lambda
          method: post

  telegram-text:
    handler: bin/telegram/text
    memorySize: 128
    environment:
      CLASSIFICATION_ENDPOINT: ${env:classification_endpoint}
    events:
      - http:
          path: /telegram/text/{chat}
          method: post
          parameters:
            paths:
              chat: true

  telegram-webhook:
    handler: bin/telegram/webhook
    memorySize: 128
    events:
      - http:
          path: /telegram/webhook
          method: post
  telegram-getgroupforchat:
    handler: bin/telegram/getGroupForChat
    memorySize: 128
    parameters:
      querystrings:
        groupId: true
    events:
      - http:
          path: /telegram/chat
          method: get


plugins:
  - serverless-domain-manager
custom:
  customDomain:
    domainName: ${env:Domain}
    basePath: 'alerting' # This will be prefixed to all routes
    createRoute53Record: true